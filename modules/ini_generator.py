import plistlib
import os
from argparse import ArgumentParser
# powered by laobamac,请遵循GPLv3开源协议
# 解析命令行参数
parser = ArgumentParser(description='Generate INI configuration from a config.plist file.')
parser.add_argument('configpath', help='Path to the config.plist file')
parser.add_argument('inipath', nargs='?', help='Path to the output INI file (default to the same directory as config.plist)', default='')
args = parser.parse_args()

# 读取 plist 文件
plist_path = args.configpath
ini_path = args.inipath if args.inipath else os.path.splitext(plist_path)[0] + '.ini'

# 读取 plist 数据
with open(plist_path, 'rb') as f:
    plist_data = plistlib.load(f)

# 准备 INI 文件内容
ini_content = "; Autogenerated INI configuration\n"
ini_content += "; Written by laobamac and open-sourced\n"
ini_content += "; Please follow the GPLv3 open-source protocol\n\n"

# 添加 Quirks 信息
quirks_sections = ["ACPI", "Booter", "Kernel", "UEFI"]
for quirk_type in quirks_sections:
    if plist_data.get(quirk_type, {}).get("Quirks"):
        ini_content += f"[{quirk_type}.Quirks]\n"
        for key, value in plist_data[quirk_type]["Quirks"].items():
            ini_content += f"{key}={str(value).lower()}\n"
    ini_content += "\n"

# 添加 Kexts 信息
kexts_list = plist_data.get("Kernel", {}).get("Add", [])
ini_content += "[Kexts]\n"
for kext in kexts_list:
    kext_name = os.path.basename(kext.get("BundlePath", "")).replace(".kext", "")
    ini_content += f"{kext_name}.kext={kext.get('Enabled', False)}\n"
ini_content += "\n"

# 添加 SSDTs 信息
ssdts_list = plist_data.get("ACPI", {}).get("Add", [])
ini_content += "[SSDTs]\n"
for ssdt in ssdts_list:
    ssdt_name = os.path.splitext(ssdt.get("Path", ""))[0]
    ini_content += f"{ssdt_name}.aml={ssdt.get('Enabled', True)}\n"
ini_content += "\n"

# 添加 NVRAM 信息
nvram_add = plist_data.get("NVRAM", {}).get("Add", {})
ini_content += "[NVRAM]\n"
for key, values in nvram_add.items():
    for subkey, subvalue in values.items():
        ini_content += f"{key}={subkey}={subvalue}\n"
ini_content += "\n"

# 添加 PlatformInfo 机型信息
platform_info = plist_data.get("PlatformInfo", {})
ini_content += "[PlatformInfo]\n"
for key, value in platform_info.items():
    if key == "Generic":
        for subkey, subvalue in value.items():
            ini_content += f"{subkey}={subvalue}\n"
    else:
        ini_content += f"{key}={value}\n"
ini_content += "\n"

# 写入 INI 文件
with open(ini_path, 'w') as f:
    f.write(ini_content)

print(f"INI configuration has been written to {ini_path}")
